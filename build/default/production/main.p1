Version 4.0 HI-TECH Software Intermediate Code
"35 ./clcd.h
[; ;./clcd.h: 35: void init_clcd(void);
[v _init_clcd `(v ~T0 @X0 0 ef ]
"10 ./i2c.h
[; ;./i2c.h: 10: void init_i2c(unsigned long baud);
[v _init_i2c `(v ~T0 @X0 0 ef1`ul ]
"16 ./ds1307.h
[; ;./ds1307.h: 16: void init_ds1307(void);
[v _init_ds1307 `(v ~T0 @X0 0 ef ]
"35 ./digital_keypad.h
[; ;./digital_keypad.h: 35: void init_digital_keypad(void);
[v _init_digital_keypad `(v ~T0 @X0 0 ef ]
"8 ./adc.h
[; ;./adc.h: 8: void init_adc(void);
[v _init_adc `(v ~T0 @X0 0 ef ]
"12 ./timers.h
[; ;./timers.h: 12: void init_timer2(void);
[v _init_timer2 `(v ~T0 @X0 0 ef ]
"10 ./uart.h
[; ;./uart.h: 10: void init_uarts(unsigned long baud);
[v _init_uarts `(v ~T0 @X0 0 ef1`ul ]
"2569 D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2569: extern volatile __bit GIE __attribute__((address(0x5F)));
[v _GIE `Vb ~T0 @X0 0 e@95 ]
"2629
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2629: extern volatile __bit PEIE __attribute__((address(0x5E)));
[v _PEIE `Vb ~T0 @X0 0 e@94 ]
[p mainexit ]
"16 ./at24c04.h
[; ;./at24c04.h: 16: void eeprom_at24c04_str_write(unsigned char memory_loc, char *data);
[v _eeprom_at24c04_str_write `(v ~T0 @X0 0 ef2`uc`*uc ]
"12 ./cbb.h
[; ;./cbb.h: 12: void log_car_event(char *event, char speed);
[v _log_car_event `(v ~T0 @X0 0 ef2`*uc`uc ]
"9 ./adc.h
[; ;./adc.h: 9: unsigned short read_adc(void);
[v _read_adc `(us ~T0 @X0 0 ef ]
"34 ./digital_keypad.h
[; ;./digital_keypad.h: 34: unsigned char read_digital_keypad(unsigned char mode);
[v _read_digital_keypad `(uc ~T0 @X0 0 ef1`uc ]
"37 C:\Program Files\Microchip\xc8\v2.40\pic\include\c90\string.h
[; ;C:\Program Files\Microchip\xc8\v2.40\pic\include\c90\string.h: 37: extern char * strcpy(char *, const char *);
[v _strcpy `(*uc ~T0 @X0 0 ef2`*uc`*Cuc ]
"14 ./cbb.h
[; ;./cbb.h: 14: void clear_screen(void);
[v _clear_screen `(v ~T0 @X0 0 ef ]
"37 ./clcd.h
[; ;./clcd.h: 37: void clcd_print(const char *str, unsigned char addr);
[v _clcd_print `(v ~T0 @X0 0 ef2`*Cuc`uc ]
"38
[; ;./clcd.h: 38: void clcd_write(unsigned char byte, unsigned char mode);
[v _clcd_write `(v ~T0 @X0 0 ef2`uc`uc ]
[v F842 `(v ~T0 @X0 1 tf1`ul ]
"92 D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\pic.h
[v __delay `JF842 ~T0 @X0 0 e ]
[p i __delay ]
"2902 D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2902: extern volatile __bit TMR2ON __attribute__((address(0x92)));
[v _TMR2ON `Vb ~T0 @X0 0 e@146 ]
"11 ./cbb.h
[; ;./cbb.h: 11: void display_dashboard(char *event, char speed);
[v _display_dashboard `(v ~T0 @X0 0 ef2`*uc`uc ]
"15
[; ;./cbb.h: 15: unsigned char login(unsigned char key,unsigned char reset_flag);
[v _login `(uc ~T0 @X0 0 ef2`uc`uc ]
"16
[; ;./cbb.h: 16: unsigned char login_menu(unsigned char key, unsigned char reset_flag);
[v _login_menu `(uc ~T0 @X0 0 ef2`uc`uc ]
"17
[; ;./cbb.h: 17: unsigned char view_log(unsigned char button,unsigned char reset_flag,unsigned char control_flag);
[v _view_log `(uc ~T0 @X0 0 ef3`uc`uc`uc ]
"18
[; ;./cbb.h: 18: unsigned char change_pwd(unsigned char key,unsigned char reset_flag,unsigned char control_flag);
[v _change_pwd `(uc ~T0 @X0 0 ef3`uc`uc`uc ]
"19
[; ;./cbb.h: 19: unsigned char clear_log(unsigned char reset_flag);
[v _clear_log `(uc ~T0 @X0 0 ef1`uc ]
"21
[; ;./cbb.h: 21: unsigned char set_time(unsigned char key,unsigned char control_flag);
[v _set_time `(uc ~T0 @X0 0 ef2`uc`uc ]
"22
[; ;./cbb.h: 22: void download_log(void);
[v _download_log `(v ~T0 @X0 0 ef ]
"54 D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;D:/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"11 main.c
[; ;main.c: 11: static char view_pos = 0;
[p x WDTE  =  OFF  ]
"14
[; ;main.c: 14:     init_clcd();
[v _key `uc ~T0 @X0 1 e ]
[v _pre_key `uc ~T0 @X0 1 e ]
[v _view `*uc ~T0 @X0 -> 11 `i e ]
[v _vl `uc ~T0 @X0 1 e ]
"15
[; ;main.c: 15:     init_i2c(100000);
[v _baud `ul ~T0 @X0 1 e ]
[i _baud
-> -> -> 9600 `i `l `ul
]
"16
[; ;main.c: 16:     init_ds1307();
[v _addr `uc ~T0 @X0 1 e ]
[i _addr
-> -> 5 `i `uc
]
[v _address `uc ~T0 @X0 1 e ]
"17
[; ;main.c: 17:     init_digital_keypad();
[v _memory_location `uc ~T0 @X0 1 e ]
[i _memory_location
-> -> 5 `i `uc
]
"18
[; ;main.c: 18:     init_adc();
[v _control_flag `uc ~T0 @X0 1 e ]
[i _control_flag
-> -> 1 `i `uc
]
"19
[; ;main.c: 19:     init_timer2();
[v _pos1 `uc ~T0 @X0 1 e ]
[i _pos1
-> -U -> 1 `i `uc
]
"20
[; ;main.c: 20:     init_uarts(9600);
[v _chng_pwd `uc ~T0 @X0 1 e ]
[v _re_chng_pwd `uc ~T0 @X0 1 e ]
[v _clear_lg `uc ~T0 @X0 1 e ]
"21
[; ;main.c: 21: 
[v _dwnld_lg `uc ~T0 @X0 1 e ]
"24
[; ;main.c: 24: }
[v _view_pos `uc ~T0 @X0 1 s ]
[i _view_pos
-> -> 0 `i `uc
]
"25
[; ;main.c: 25: 
[v _init_config `(v ~T0 @X0 1 sf ]
{
[e :U _init_config ]
[f ]
"27
[; ;main.c: 27:     init_config();
[e ( _init_clcd ..  ]
"28
[; ;main.c: 28:     unsigned char reset_flag,menu_p;
[e ( _init_i2c (1 -> -> 100000 `l `ul ]
"29
[; ;main.c: 29:     char time_set;
[e ( _init_ds1307 ..  ]
"30
[; ;main.c: 30:     unsigned char dwnld_log;
[e ( _init_digital_keypad ..  ]
"31
[; ;main.c: 31: 
[e ( _init_adc ..  ]
"32
[; ;main.c: 32:     char *gear[] = {"GN","G1","G2","G3","G4","GR"};
[e ( _init_timer2 ..  ]
"33
[; ;main.c: 33:     char event[] = "ON";
[e ( _init_uarts (1 -> -> -> 9600 `i `l `ul ]
"35
[; ;main.c: 35: 
[e = _GIE -> -> 1 `i `b ]
"36
[; ;main.c: 36: 
[e = _PEIE -> -> 1 `i `b ]
"37
[; ;main.c: 37:     char speed = 0,gr = 0;
[e :UE 96 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"39
[; ;main.c: 39:     log_car_event(event,speed);
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"40
[; ;main.c: 40:     while (1) {
[e ( _init_config ..  ]
"41
[; ;main.c: 41: 
[v _reset_flag `uc ~T0 @X0 1 a ]
[v _menu_p `uc ~T0 @X0 1 a ]
"42
[; ;main.c: 42:         speed = read_adc() / 10;
[v _time_set `uc ~T0 @X0 1 a ]
"43
[; ;main.c: 43:         if(speed > 99)
[v _dwnld_log `uc ~T0 @X0 1 a ]
[v F1093 `*uc ~T0 @X0 -> 6 `i s ]
[i F1093
:U ..
"45
[; ;main.c: 45:             speed = 99;
:s 1C
:s 2C
:s 3C
:s 4C
:s 5C
:s 6C
..
]
[v _gear `*uc ~T0 @X0 -> 6 `i a ]
[e = _gear F1093 ]
[v F1095 `uc ~T0 @X0 -> 3 `i s ]
[i F1095
:U ..
"46
[; ;main.c: 46:         }
-> 79 `c
-> 78 `c
-> 0 `c
..
]
[v _event `uc ~T0 @X0 -> 3 `i a ]
[e = _event F1095 ]
"50
[; ;main.c: 50:         for(int j = 3000; j-- ;);
[v _speed `uc ~T0 @X0 1 a ]
[e = _speed -> -> 0 `i `uc ]
[v _gr `uc ~T0 @X0 1 a ]
[e = _gr -> -> 0 `i `uc ]
"51
[; ;main.c: 51: 
[e ( _eeprom_at24c04_str_write (2 , -> -> 0 `i `uc :s 7C ]
"52
[; ;main.c: 52:         if(key != 0x3F)
[e ( _log_car_event (2 , &U _event _speed ]
"53
[; ;main.c: 53:         {
[e :U 99 ]
{
"55
[; ;main.c: 55:         }
[e = _speed -> / -> ( _read_adc ..  `ui -> -> 10 `i `ui `uc ]
"56
[; ;main.c: 56:         if(key == 0x3E)
[e $ ! > -> _speed `i -> 99 `i 101  ]
"57
[; ;main.c: 57:         {
{
"58
[; ;main.c: 58:             strcpy(event,"C ");
[e = _speed -> -> 99 `i `uc ]
"59
[; ;main.c: 59:              log_car_event(event,speed);
}
[e :U 101 ]
"61
[; ;main.c: 61:         }
[e = _key ( _read_digital_keypad (1 -> -> 1 `i `uc ]
"63
[; ;main.c: 63:         {
{
[v _j `i ~T0 @X0 1 a ]
[e = _j -> 3000 `i ]
[e $U 105  ]
[e :U 102 ]
[e :U 105 ]
[e $ != -- _j -> 1 `i -> 0 `i 102  ]
[e :U 103 ]
}
"65
[; ;main.c: 65:             gr++;
[e $ ! != -> _key `i -> 63 `i 106  ]
"66
[; ;main.c: 66:              log_car_event(event,speed);
{
"67
[; ;main.c: 67: 
[e = _pre_key _key ]
"68
[; ;main.c: 68:         }
}
[e :U 106 ]
"69
[; ;main.c: 69:         else if(key == 0x3B && gr > 0 && control_flag == 0x01)
[e $ ! == -> _key `i -> 62 `i 107  ]
"70
[; ;main.c: 70:         {
{
"71
[; ;main.c: 71:             gr--;
[e ( _strcpy (2 , &U _event :s 8C ]
"72
[; ;main.c: 72:             strcpy(event,gear[gr]);
[e ( _log_car_event (2 , &U _event _speed ]
"74
[; ;main.c: 74:         }
}
[e $U 108  ]
"75
[; ;main.c: 75:         else if(((key == 0x37) || (key == 0x2F)) && control_flag == 0x01)
[e :U 107 ]
[e $ ! && && == -> _key `i -> 61 `i < -> _gr `i -> 6 `i == -> _control_flag `i -> 1 `i 109  ]
"76
[; ;main.c: 76:         {
{
"77
[; ;main.c: 77:             clear_screen();
[e ( _strcpy (2 , &U _event -> *U + &U _gear * -> _gr `ux -> -> # *U &U _gear `ui `ux `*Cuc ]
"78
[; ;main.c: 78:             clcd_print(" ENTER PASSWORD",(0x80 + 0));
[e ++ _gr -> -> 1 `i `uc ]
"79
[; ;main.c: 79:             clcd_write(0xC6,0);
[e ( _log_car_event (2 , &U _event _speed ]
"81
[; ;main.c: 81:             _delay((unsigned long)((100)*(20000000/4000000.0)));
}
[e $U 110  ]
"82
[; ;main.c: 82:             control_flag = 0x02;
[e :U 109 ]
[e $ ! && && == -> _key `i -> 59 `i > -> _gr `i -> 0 `i == -> _control_flag `i -> 1 `i 111  ]
"83
[; ;main.c: 83:             reset_flag = 0x10;
{
"84
[; ;main.c: 84:             TMR2ON = 1;
[e -- _gr -> -> 1 `i `uc ]
"85
[; ;main.c: 85:         }
[e ( _strcpy (2 , &U _event -> *U + &U _gear * -> _gr `ux -> -> # *U &U _gear `ui `ux `*Cuc ]
"86
[; ;main.c: 86: 
[e ( _log_car_event (2 , &U _event _speed ]
"87
[; ;main.c: 87:         else if (key == 0x11 && control_flag == 0x03)
}
[e $U 112  ]
"88
[; ;main.c: 88:         {
[e :U 111 ]
[e $ ! && || == -> _key `i -> 55 `i == -> _key `i -> 47 `i == -> _control_flag `i -> 1 `i 113  ]
"89
[; ;main.c: 89: 
{
"90
[; ;main.c: 90:                 switch(menu_p)
[e ( _clear_screen ..  ]
"91
[; ;main.c: 91:                 {
[e ( _clcd_print (2 , :s 9C -> + -> 128 `i -> 0 `i `uc ]
"92
[; ;main.c: 92:                     case 0:
[e ( _clcd_write (2 , -> -> 198 `i `uc -> -> 0 `i `uc ]
"93
[; ;main.c: 93: 
[e ( _clcd_write (2 , -> -> 15 `i `uc -> -> 0 `i `uc ]
"94
[; ;main.c: 94:                         control_flag = 0x04;
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"95
[; ;main.c: 95:                         reset_flag = 0x60;
[e = _control_flag -> -> 2 `i `uc ]
"96
[; ;main.c: 96:                         clear_screen();
[e = _reset_flag -> -> 16 `i `uc ]
"97
[; ;main.c: 97: 
[e = _TMR2ON -> -> 1 `i `b ]
"98
[; ;main.c: 98:                         break;;
}
[e $U 114  ]
"100
[; ;main.c: 100:                         log_car_event("CL",speed);
[e :U 113 ]
[e $ ! && == -> _key `i -> 17 `i == -> _control_flag `i -> 3 `i 115  ]
"101
[; ;main.c: 101:                         control_flag = 0x05;
{
"103
[; ;main.c: 103:                         clcd_print("CLEAR",(0x80 + 0));
[e $U 117  ]
"104
[; ;main.c: 104:                         clcd_write(0x0C,0);
{
"105
[; ;main.c: 105: 
[e :U 118 ]
"107
[; ;main.c: 107: 
[e = _control_flag -> -> 4 `i `uc ]
"108
[; ;main.c: 108:                         case 2:
[e = _reset_flag -> -> 96 `i `uc ]
"109
[; ;main.c: 109:                             clear_screen();
[e ( _clear_screen ..  ]
"111
[; ;main.c: 111:                         reset_flag = 0xB0;
[e $U 116  ]
"112
[; ;main.c: 112: 
[e :U 119 ]
"113
[; ;main.c: 113: 
[e ( _log_car_event (2 , :s 10C _speed ]
"114
[; ;main.c: 114:                         clcd_write(0x0C,0);
[e = _control_flag -> -> 5 `i `uc ]
"115
[; ;main.c: 115: 
[e ( _clear_screen ..  ]
"116
[; ;main.c: 116:                         break;;
[e ( _clcd_print (2 , :s 11C -> + -> 128 `i -> 0 `i `uc ]
"117
[; ;main.c: 117: 
[e ( _clcd_write (2 , -> -> 12 `i `uc -> -> 0 `i `uc ]
"119
[; ;main.c: 119: 
[e $U 116  ]
"121
[; ;main.c: 121:                         control_flag = 0x07;
[e :U 120 ]
"122
[; ;main.c: 122:                         reset_flag = 0x70;
[e ( _clear_screen ..  ]
"123
[; ;main.c: 123:                         TMR2ON = 1;
[e = _control_flag -> -> 6 `i `uc ]
"124
[e = _reset_flag -> -> 176 `i `uc ]
"127
[e ( _clcd_write (2 , -> -> 12 `i `uc -> -> 0 `i `uc ]
"129
[e $U 116  ]
"131
[e :U 121 ]
"133
[e ( _clear_screen ..  ]
"134
[e = _control_flag -> -> 7 `i `uc ]
"135
[e = _reset_flag -> -> 112 `i `uc ]
"136
[e = _TMR2ON -> -> 1 `i `b ]
"145
[; ;main.c: 145:                         break;;
[e $U 116  ]
"147
[; ;main.c: 147:                         case 4:
[e :U 122 ]
"148
[; ;main.c: 148:                         control_flag = 0x08;
[e = _control_flag -> -> 8 `i `uc ]
"149
[; ;main.c: 149:                         clear_screen();
[e ( _clear_screen ..  ]
"151
[; ;main.c: 151:                         clcd_write(0x0C,0);
[e ( _clcd_write (2 , -> -> 12 `i `uc -> -> 0 `i `uc ]
"153
[; ;main.c: 153:                         break;;
[e $U 116  ]
"154
[; ;main.c: 154:                 }
}
[e $U 116  ]
[e :U 117 ]
[e [\ -> _menu_p `i , $ -> 0 `i 118
 , $ -> 1 `i 119
 , $ -> 2 `i 120
 , $ -> 3 `i 121
 , $ -> 4 `i 122
 116 ]
[e :U 116 ]
"155
[; ;main.c: 155:         }
}
[e $U 123  ]
"156
[; ;main.c: 156:         else if(key == 0x22 && control_flag == 0x04)
[e :U 115 ]
[e $ ! && == -> _key `i -> 34 `i == -> _control_flag `i -> 4 `i 124  ]
"157
[; ;main.c: 157:         {
{
"159
[; ;main.c: 159:             clear_screen();
[e ( _clear_screen ..  ]
"160
[; ;main.c: 160:             control_flag = 0x03;
[e = _control_flag -> -> 3 `i `uc ]
"163
[; ;main.c: 163:         }
}
[e $U 125  ]
"164
[; ;main.c: 164:         else if(key == 0x22 && control_flag == 0x05)
[e :U 124 ]
[e $ ! && == -> _key `i -> 34 `i == -> _control_flag `i -> 5 `i 126  ]
"165
[; ;main.c: 165:         {
{
"166
[; ;main.c: 166:             clear_screen();
[e ( _clear_screen ..  ]
"167
[; ;main.c: 167:             control_flag = 0x03;
[e = _control_flag -> -> 3 `i `uc ]
"169
[; ;main.c: 169:         }
}
[e $U 127  ]
"170
[; ;main.c: 170:         else if(key == 0x22 && control_flag == 0x06)
[e :U 126 ]
[e $ ! && == -> _key `i -> 34 `i == -> _control_flag `i -> 6 `i 128  ]
"171
[; ;main.c: 171:         {
{
"172
[; ;main.c: 172:             clear_screen();
[e ( _clear_screen ..  ]
"173
[; ;main.c: 173:             control_flag = 0x03;
[e = _control_flag -> -> 3 `i `uc ]
"175
[; ;main.c: 175:         }
}
[e $U 129  ]
"176
[; ;main.c: 176:         else if(key == 0x22 && control_flag == 0x08)
[e :U 128 ]
[e $ ! && == -> _key `i -> 34 `i == -> _control_flag `i -> 8 `i 130  ]
"177
[; ;main.c: 177:         {
{
"178
[; ;main.c: 178:             clear_screen();
[e ( _clear_screen ..  ]
"179
[; ;main.c: 179:             control_flag = 0x03;
[e = _control_flag -> -> 3 `i `uc ]
"181
[; ;main.c: 181:         }
}
[e $U 131  ]
"182
[; ;main.c: 182:         else if(key == 0x22 && control_flag == 0x07)
[e :U 130 ]
[e $ ! && == -> _key `i -> 34 `i == -> _control_flag `i -> 7 `i 132  ]
"183
[; ;main.c: 183:         {
{
"184
[; ;main.c: 184:             clear_screen();
[e ( _clear_screen ..  ]
"185
[; ;main.c: 185:             control_flag = 0x03;
[e = _control_flag -> -> 3 `i `uc ]
"186
[; ;main.c: 186:              clcd_write(0x0C,0);
[e ( _clcd_write (2 , -> -> 12 `i `uc -> -> 0 `i `uc ]
"188
[; ;main.c: 188:         }
}
[e $U 133  ]
"189
[; ;main.c: 189:         else if(key == 0x22 && control_flag == 0x03)
[e :U 132 ]
[e $ ! && == -> _key `i -> 34 `i == -> _control_flag `i -> 3 `i 134  ]
"190
[; ;main.c: 190:         {
{
"191
[; ;main.c: 191:             clear_screen();
[e ( _clear_screen ..  ]
"192
[; ;main.c: 192:             control_flag = 0x01;
[e = _control_flag -> -> 1 `i `uc ]
"193
[; ;main.c: 193:             reset_flag = 0x10;
[e = _reset_flag -> -> 16 `i `uc ]
"197
[; ;main.c: 197:         }
}
[e :U 134 ]
[e :U 133 ]
[e :U 131 ]
[e :U 129 ]
[e :U 127 ]
[e :U 125 ]
[e :U 123 ]
[e :U 114 ]
[e :U 112 ]
[e :U 110 ]
[e :U 108 ]
"202
[; ;main.c: 202:         switch(control_flag)
[e $U 136  ]
"203
[; ;main.c: 203:         {
{
"204
[; ;main.c: 204:             case 0x01:
[e :U 137 ]
"205
[; ;main.c: 205:                 display_dashboard(event,speed);
[e ( _display_dashboard (2 , &U _event _speed ]
"206
[; ;main.c: 206:                 break;;
[e $U 135  ]
"208
[; ;main.c: 208:             case 0x02:
[e :U 138 ]
"209
[; ;main.c: 209:                 switch(login(key,reset_flag))
[e $U 140  ]
"210
[; ;main.c: 210:                 {
{
"211
[; ;main.c: 211:                     case 0x30:
[e :U 141 ]
"212
[; ;main.c: 212:                         control_flag = 0x01;
[e = _control_flag -> -> 1 `i `uc ]
"213
[; ;main.c: 213:                         TMR2ON = 0;
[e = _TMR2ON -> -> 0 `i `b ]
"214
[; ;main.c: 214:                         clcd_write(0x0C,0);
[e ( _clcd_write (2 , -> -> 12 `i `uc -> -> 0 `i `uc ]
"215
[; ;main.c: 215:                         _delay((unsigned long)((100)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"216
[; ;main.c: 216:                         break;;
[e $U 139  ]
"217
[; ;main.c: 217:                     case 0x40:
[e :U 142 ]
"218
[; ;main.c: 218:                         control_flag = 0x03;
[e = _control_flag -> -> 3 `i `uc ]
"219
[; ;main.c: 219:                         reset_flag = 0x50;
[e = _reset_flag -> -> 80 `i `uc ]
"220
[; ;main.c: 220:                         TMR2ON = 0;
[e = _TMR2ON -> -> 0 `i `b ]
"221
[; ;main.c: 221:                         clcd_write(0x0C,0);
[e ( _clcd_write (2 , -> -> 12 `i `uc -> -> 0 `i `uc ]
"222
[; ;main.c: 222:                         _delay((unsigned long)((100)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"223
[; ;main.c: 223:                         continue;
[e $U 98  ]
"224
[; ;main.c: 224:                         break;
[e $U 139  ]
"225
[; ;main.c: 225:                 }
}
[e $U 139  ]
[e :U 140 ]
[e [\ -> ( _login (2 , _key _reset_flag `i , $ -> 48 `i 141
 , $ -> 64 `i 142
 139 ]
[e :U 139 ]
"226
[; ;main.c: 226:                 break;;
[e $U 135  ]
"227
[; ;main.c: 227:             case 0x03:
[e :U 143 ]
"228
[; ;main.c: 228:                 menu_p = (login_menu(key,reset_flag));
[e = _menu_p ( _login_menu (2 , _key _reset_flag ]
"229
[; ;main.c: 229:                 break;;
[e $U 135  ]
"231
[; ;main.c: 231:             case 0x04:
[e :U 144 ]
"233
[; ;main.c: 233:                  vl = view_log(key,reset_flag,control_flag);
[e = _vl ( _view_log (3 , , _key _reset_flag _control_flag ]
"234
[; ;main.c: 234:                  if(vl == 0)
[e $ ! == -> _vl `i -> 0 `i 145  ]
"235
[; ;main.c: 235:                  {
{
"236
[; ;main.c: 236:                      clear_screen;
[e &U _clear_screen ]
"237
[; ;main.c: 237:                       clcd_print("NO LOGS AVAILABLE", (0x80 + 0));
[e ( _clcd_print (2 , :s 12C -> + -> 128 `i -> 0 `i `uc ]
"238
[; ;main.c: 238:         _delay((unsigned long)((2000)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 2000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"239
[; ;main.c: 239: clear_screen();
[e ( _clear_screen ..  ]
"240
[; ;main.c: 240:                  control_flag = 0x03;
[e = _control_flag -> -> 3 `i `uc ]
"241
[; ;main.c: 241:                  }
}
[e :U 145 ]
"243
[; ;main.c: 243:                  break;;
[e $U 135  ]
"245
[; ;main.c: 245:             case 0x07:
[e :U 146 ]
"247
[; ;main.c: 247:                  chng_pwd = change_pwd(key,reset_flag,control_flag);
[e = _chng_pwd ( _change_pwd (3 , , _key _reset_flag _control_flag ]
"249
[; ;main.c: 249:                  if(chng_pwd == 0x09)
[e $ ! == -> _chng_pwd `i -> 9 `i 147  ]
"250
[; ;main.c: 250:                  {
{
"251
[; ;main.c: 251:                      clear_screen();
[e ( _clear_screen ..  ]
"252
[; ;main.c: 252:                       TMR2ON = 0;
[e = _TMR2ON -> -> 0 `i `b ]
"254
[; ;main.c: 254:                      clcd_print("PWD CHANGED",(0x80 + 2));
[e ( _clcd_print (2 , :s 13C -> + -> 128 `i -> 2 `i `uc ]
"255
[; ;main.c: 255:                      _delay((unsigned long)((3000)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 3000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"256
[; ;main.c: 256:                      clear_screen();
[e ( _clear_screen ..  ]
"257
[; ;main.c: 257:                      control_flag = 0x03;
[e = _control_flag -> -> 3 `i `uc ]
"258
[; ;main.c: 258:                      reset_flag = 0x70;
[e = _reset_flag -> -> 112 `i `uc ]
"259
[; ;main.c: 259:                      clcd_write(0x0C,0);
[e ( _clcd_write (2 , -> -> 12 `i `uc -> -> 0 `i `uc ]
"260
[; ;main.c: 260:                  }
}
[e $U 148  ]
"261
[; ;main.c: 261:                  else if(chng_pwd == 0x0A)
[e :U 147 ]
[e $ ! == -> _chng_pwd `i -> 10 `i 149  ]
"262
[; ;main.c: 262:                  {
{
"263
[; ;main.c: 263:                      clear_screen();
[e ( _clear_screen ..  ]
"264
[; ;main.c: 264:                       TMR2ON = 0;
[e = _TMR2ON -> -> 0 `i `b ]
"265
[; ;main.c: 265:                         clcd_write(0x0C,0);
[e ( _clcd_write (2 , -> -> 12 `i `uc -> -> 0 `i `uc ]
"266
[; ;main.c: 266:                      clcd_print("PWD NOT CHANGED",(0x80 + 2));
[e ( _clcd_print (2 , :s 14C -> + -> 128 `i -> 2 `i `uc ]
"267
[; ;main.c: 267:                      clcd_print("TRY AGAIN",(0xC0 + 3));
[e ( _clcd_print (2 , :s 15C -> + -> 192 `i -> 3 `i `uc ]
"268
[; ;main.c: 268:                      _delay((unsigned long)((3000)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 3000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"269
[; ;main.c: 269:                      clear_screen();
[e ( _clear_screen ..  ]
"270
[; ;main.c: 270:                      control_flag = 0x03;
[e = _control_flag -> -> 3 `i `uc ]
"271
[; ;main.c: 271:                      reset_flag = 0x70;
[e = _reset_flag -> -> 112 `i `uc ]
"273
[; ;main.c: 273:                  }
}
[e :U 149 ]
[e :U 148 ]
"274
[; ;main.c: 274:                  break;;
[e $U 135  ]
"276
[; ;main.c: 276:             case 0x05:
[e :U 150 ]
"277
[; ;main.c: 277:                 clear_screen();
[e ( _clear_screen ..  ]
"278
[; ;main.c: 278:                 reset_flag = 0x90;
[e = _reset_flag -> -> 144 `i `uc ]
"279
[; ;main.c: 279:                clear_lg = clear_log(reset_flag);
[e = _clear_lg ( _clear_log (1 _reset_flag ]
"280
[; ;main.c: 280:                if(clear_lg == 0xA0)
[e $ ! == -> _clear_lg `i -> 160 `i 151  ]
"281
[; ;main.c: 281:                {
{
"282
[; ;main.c: 282:                     clcd_print("LOGS CLEARED",(0x80 + 3));
[e ( _clcd_print (2 , :s 16C -> + -> 128 `i -> 3 `i `uc ]
"283
[; ;main.c: 283:                     clcd_print("SUCCESSFULLY",(0xC0 + 3));
[e ( _clcd_print (2 , :s 17C -> + -> 192 `i -> 3 `i `uc ]
"284
[; ;main.c: 284:                     _delay((unsigned long)((500)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"285
[; ;main.c: 285:                     clear_screen();
[e ( _clear_screen ..  ]
"286
[; ;main.c: 286:                     control_flag = 0x03;
[e = _control_flag -> -> 3 `i `uc ]
"287
[; ;main.c: 287:                }
}
[e :U 151 ]
"289
[; ;main.c: 289:                break;;
[e $U 135  ]
"291
[; ;main.c: 291:             case 0x08:
[e :U 152 ]
"294
[; ;main.c: 294:                 time_set = set_time(key,control_flag);
[e = _time_set -> ( _set_time (2 , _key _control_flag `uc ]
"295
[; ;main.c: 295:                 if(time_set == 1)
[e $ ! == -> _time_set `i -> 1 `i 153  ]
"296
[; ;main.c: 296:                 {
{
"298
[; ;main.c: 298:         clcd_print("  TIME CHANGED  ",(0x80 + 0));
[e ( _clcd_print (2 , :s 18C -> + -> 128 `i -> 0 `i `uc ]
"299
[; ;main.c: 299:         clcd_print("  SUCCESSFULLY  ",(0xC0 + 0));
[e ( _clcd_print (2 , :s 19C -> + -> 192 `i -> 0 `i `uc ]
"300
[; ;main.c: 300:         _delay((unsigned long)((3000)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 3000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"301
[; ;main.c: 301:         clear_screen();
[e ( _clear_screen ..  ]
"302
[; ;main.c: 302:         control_flag = 0x03;
[e = _control_flag -> -> 3 `i `uc ]
"303
[; ;main.c: 303:                 }
}
[e :U 153 ]
"305
[; ;main.c: 305:                 break;;
[e $U 135  ]
"307
[; ;main.c: 307:             case 0x06:
[e :U 154 ]
"311
[; ;main.c: 311:                     download_log();
[e ( _download_log ..  ]
"313
[; ;main.c: 313:                 clear_screen();
[e ( _clear_screen ..  ]
"314
[; ;main.c: 314:                 control_flag = 0x03;
[e = _control_flag -> -> 3 `i `uc ]
"316
[; ;main.c: 316:                 break;;
[e $U 135  ]
"319
[; ;main.c: 319:         }
}
[e $U 135  ]
[e :U 136 ]
[e [\ -> _control_flag `i , $ -> 1 `i 137
 , $ -> 2 `i 138
 , $ -> 3 `i 143
 , $ -> 4 `i 144
 , $ -> 7 `i 146
 , $ -> 5 `i 150
 , $ -> 8 `i 152
 , $ -> 6 `i 154
 135 ]
[e :U 135 ]
"320
[; ;main.c: 320:         reset_flag = 0x20;
[e = _reset_flag -> -> 32 `i `uc ]
"321
[; ;main.c: 321:     }
}
[e :U 98 ]
[e $U 99  ]
[e :U 100 ]
"323
[; ;main.c: 323: }
[e :UE 97 ]
}
[a 17C 83 85 67 67 69 83 83 70 85 76 76 89 0 ]
[a 6C 71 82 0 ]
[a 11C 67 76 69 65 82 0 ]
[a 15C 84 82 89 32 65 71 65 73 78 0 ]
[a 1C 71 78 0 ]
[a 10C 67 76 0 ]
[a 12C 78 79 32 76 79 71 83 32 65 86 65 73 76 65 66 76 69 0 ]
[a 9C 32 69 78 84 69 82 32 80 65 83 83 87 79 82 68 0 ]
[a 16C 76 79 71 83 32 67 76 69 65 82 69 68 0 ]
[a 14C 80 87 68 32 78 79 84 32 67 72 65 78 71 69 68 0 ]
[a 13C 80 87 68 32 67 72 65 78 71 69 68 0 ]
[a 7C 52 52 53 53 0 ]
[a 5C 71 52 0 ]
[a 4C 71 51 0 ]
[a 3C 71 50 0 ]
[a 2C 71 49 0 ]
[a 8C 67 32 0 ]
[a 19C 32 32 83 85 67 67 69 83 83 70 85 76 76 89 32 32 0 ]
[a 18C 32 32 84 73 77 69 32 67 72 65 78 71 69 68 32 32 0 ]
